include_guard(GLOBAL)

requires_windows("${DEPENDENCY}")

message(STATUS "Using ${DEPENDENCY_VERSION} of precompiled ZLib with WINAPI.")

string(REPLACE "." ";" VERSION_STRING "${DEPENDENCY_VERSION}")
string(CONCAT VERSION_STRING ${VERSION_STRING})

if (CMAKE_SIZEOF_VOID_P EQUAL 8)
	set(ARCHIVE_MD5 "c97a8014de2e84c1a2b8f4b6528681f6")
	set(ARCHIVE_SUFFIX "x64")
	set(LIBRARY_DIR_SUFFIX "_x64")
else ()
	set(ARCHIVE_MD5 "5056de1726c7bb77ff7b731e9e652093")
	set(ARCHIVE_SUFFIX)
	set(LIBRARY_DIR_SUFFIX "32")
endif ()

configure_file(
	"${CMAKE_CURRENT_LIST_DIR}/CMakeLists.in.cmake"
	"${CMAKE_CURRENT_BINARY_DIR}/${DEPENDENCY}.cmake"
	@ONLY
	NEWLINE_STYLE UNIX
)

ExternalProject_Add("${DEPENDENCY}"
	${EP_BASE_LOCATION_ARGS}
	URL "http://www.winimage.com/zLibDll/zlib${VERSION_STRING}dll${ARCHIVE_SUFFIX}.zip"
	URL_MD5 "${ARCHIVE_MD5}"
	DOWNLOAD_EXTRACT_TIMESTAMP TRUE
	DOWNLOAD_NO_PROGRESS TRUE
	PATCH_COMMAND
		"${CMAKE_COMMAND}"
		"-E"
		"copy_if_different"
		"${CMAKE_CURRENT_BINARY_DIR}/${DEPENDENCY}.cmake"
		"<SOURCE_DIR>/CMakeLists.txt"
	${EP_CMAKE_DEFAULT_GENERATOR}
	CMAKE_ARGS
		${EP_CMAKE_DEFAULT_CONFIGURE_ARGS}
	CMAKE_CACHE_ARGS
		${EP_CMAKE_DEFAULT_CONFIGURE_CACHE_ARGS}
	CONFIGURE_HANDLED_BY_BUILD TRUE
	${EP_NO_BUILD_DEFAULT_ARGS}
	EXCLUDE_FROM_ALL TRUE
)

set(DEPENDENCY_ENABLED TRUE)
